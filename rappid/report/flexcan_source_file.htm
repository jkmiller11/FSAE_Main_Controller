<HTML>
<pre>/*<br> *######################################################################<br> *                                RAppIDJDP<br> *           Rapid Application Initialization and Documentation Tool<br> *                         Freescale Semiconductor Inc.<br> *<br> *######################################################################<br> *<br> * Project Name           : fsae_main_controller<br> *<br> * Project File           : fsae_main_controller.rsp<br> *<br> * Revision Number        : 1.0<br> *<br> * Tool Version           : 1.3.1.6<br> *<br> * file                   : flexcan_init.c<br> *<br> * Target Compiler        : Codewarrior<br> *<br> * Target Part            : MPC5604B<br> *<br> * Part Errata Fixes      : none<br> *<br> * Project Last Save Date : 06-Jun-2013 02:49:54<br> *<br> * Created on Date        : 06-Jun-2013 02:49:57<br> *<br> * Brief Description      : This file contains FlexCAN register configuration<br> *                          in freeze mode<br> *<br> ******************************************************************************** <br> *<br> * Detail Description     : File contains functions where each FlexCAN configuration<br> *                         for maximum number of MBs, CAN speed, different<br> *                         operating modes, Receive Mask and Interrupt Mask<br> *                         can be done in freeze mode.<br> *<br> ******************************************************************************** <br> *<br> *######################################################################<br>*/<br><br> <br> <br>/********************  Dependent Include files here **********************/<br><br>#include "flexcan_init.h"<br><br><br>/*********************  Initialization Function(s) ************************/<br><br>uint8_t flexcan_init_fnc(void)<br>{<br>   uint8_t init_status = 0;<br><br>   init_status += flexcan_0_init_fnc();<br>   init_status += 2*flexcan_1_init_fnc();<br>   init_status += 4*flexcan_2_init_fnc();<br><br>   return init_status;<br>}<br>/*********************  CAN_0 Initialization Function(s) ************************/<br><br>uint8_t flexcan_0_init_fnc(void)<br>{<br><br>    uint16_t i, x;<br>    uint8_t status;<br>    volatile uint16_t j;<br><br>    /*Enable the CAN module */<br>    CAN_0.MCR.B.MDIS    = 0;<br><br>    /* Reset FlexCAN Module */<br>    CAN_0.MCR.B.SOFTRST = 1;<br>    while( CAN_0.MCR.B.SOFTRST ==1){}<br><br>    /*Disable the CAN module */<br>    CAN_0.MCR.B.MDIS    = 1;<br><br>    /* Set CAN clock source 1: bus , 0: oscillator */<br>    CAN_0.CR.B.CLKSRC   = 0;<br><br>    /*Enable the CAN module */<br>    CAN_0.MCR.B.MDIS    = 1;<br><br>    /* Set FRZ bit */<br>    CAN_0.MCR.B.FRZ   = 1;<br>    /* Set HALT bit */<br>    CAN_0.MCR.B.HALT  = 1;<br><br>/* ----------------------------------------------------------- */<br>/*                   CAN_0.MCR Control Register                          */<br>/* ----------------------------------------------------------- */<br>    CAN_0.MCR.R = 0xD080000F;<br>    /* Disable the FlexCAN module: 1*/<br>    /* Freeze Enable :1*/<br>    /* FIFO Enable :0*/<br>    /* Halt : 1*/<br>    /* Self Reception : 0*/<br>    /* Supervisor Mode : 0*/<br>    /* Warning Interrupt Enable : 0*/<br>    /* Backwards Compatibility Configuration : 0*/<br>    /* Local Priority Enable : 0*/<br>    /* Abort Enable : 0*/<br>    /* ID Acceptance Mode : 0*/<br>    /* Maximum Number of Message Buffers : 15*/<br><br>/* ----------------------------------------------------------- */<br>/*    CAN_0.CR Control register                                */<br>/* ----------------------------------------------------------- */<br>    CAN_0.CR.R  = 0x041B0006;<br>    /* Bus -Off Interrupt Mask: Disabled         */<br>    /* CAN bit Sampling Mode: 1 Sample           */<br>    /* CAN Error Interrupt Mask: Disabled        */<br>    /* CLOCK Source: Oscillator                  */<br>    /* Listen Only Mode: Disabled                */<br>    /* Loop Back Mode: Disabled                  */<br>    /* Bus off Recovery: Enabled                 */<br>    /* Lowest Buffer Transfer First: Disabled    */<br>    /* Phase Segment1: 4                         */<br>    /* Phase Segment2: 4                         */<br>    /* Prescalar Division Factor: 5              */<br>    /* Propagation Segment: 7                    */<br>    /* Resynchronization Jump Width: 1           */<br>    /* Timer Synch Mode: Disabled                */<br><br><br><br>    /* Set the FlexCAN Maximum Buffer Number */<br>    CAN_0.MCR.B.MAXMB  = 15;<br><br><br>    /* clear memory from message buffer 0 to 15 */<br>    for(x=0; x < 16; x++)<br>    {<br>        CAN_0.BUF[x].CS.R = 0;<br>        CAN_0.BUF[x].ID.R = 0;<br>        for(i=0; i < 2; i++) <br>        {<br>            CAN_0.BUF[x].DATA.W[i] = 0;<br>        }<br>    }<br><br>/* ----------------------------------------------------------- */<br>/*    CAN_0.RXGMASK global mask                                */<br>/* ----------------------------------------------------------- */<br>    CAN_0.RXGMASK.R  = 0xFFFFFFFF;<br><br>/* ----------------------------------------------------------- */<br>/*    CAN_0.RX14MASK buffer 14 mask                             */<br>/* ----------------------------------------------------------- */<br>    CAN_0.RX14MASK.R  = 0xFFFFFFFF;<br><br>/* ----------------------------------------------------------- */<br>/*    CAN_0.RX15MASK  buffer 15 mask                            */<br>/* ----------------------------------------------------------- */<br>    CAN_0.RX15MASK.R  = 0xFFFFFFFF;<br><br><br>/* ----------------------------------------------------------- */<br>/*    CAN_0.IMRH Interrupt masks high register                  */<br>/* ----------------------------------------------------------- */<br>    CAN_0.IMRH.R  = 0x00000000;<br><br>/* ----------------------------------------------------------- */<br>/*    CAN_0.IMRL Interrupt masks low register                  */<br>/* ----------------------------------------------------------- */<br>    CAN_0.IMRL.R  = 0x00000000;<br><br>    /* Negate the HALT and the FREEZE bit to let the FlexCAN synchronize. */<br>    /* Exit and Disable freeze mode */<br>    CAN_0.MCR.B.HALT  =  1;<br>    CAN_0.MCR.B.FRZ   =  1;<br>    <br><br>    /* await synchronization (delay) */<br>    for(j=1; j < 255; j++){}<br><br>    if(CAN_0.MCR.B.NOTRDY == 1)<br>    {<br>       status = 1;<br>    }<br>    else<br>    {<br>       status = 0;<br>    }<br><br><br>    return status;<br><br>}<br>/*********************  CAN_1 Initialization Function(s) ************************/<br><br>uint8_t flexcan_1_init_fnc(void)<br>{<br><br>    uint16_t i, x;<br>    uint8_t status;<br>    volatile uint16_t j;<br><br>    /*Enable the CAN module */<br>    CAN_1.MCR.B.MDIS    = 0;<br><br>    /* Reset FlexCAN Module */<br>    CAN_1.MCR.B.SOFTRST = 1;<br>    while( CAN_1.MCR.B.SOFTRST ==1){}<br><br>    /*Disable the CAN module */<br>    CAN_1.MCR.B.MDIS    = 1;<br><br>    /* Set CAN clock source 1: bus , 0: oscillator */<br>    CAN_1.CR.B.CLKSRC   = 0;<br><br>    /*Enable the CAN module */<br>    CAN_1.MCR.B.MDIS    = 0;<br><br>    /* Set FRZ bit */<br>    CAN_1.MCR.B.FRZ   = 1;<br>    /* Set HALT bit */<br>    CAN_1.MCR.B.HALT  = 1;<br><br>/* ----------------------------------------------------------- */<br>/*                   CAN_1.MCR Control Register                          */<br>/* ----------------------------------------------------------- */<br>    CAN_1.MCR.R = 0x5080000F;<br>    /* Enable the FlexCAN module: 0*/<br>    /* Freeze Enable :1*/<br>    /* FIFO Enable :0*/<br>    /* Halt : 1*/<br>    /* Self Reception : 0*/<br>    /* Supervisor Mode : 0*/<br>    /* Warning Interrupt Enable : 0*/<br>    /* Backwards Compatibility Configuration : 0*/<br>    /* Local Priority Enable : 0*/<br>    /* Abort Enable : 0*/<br>    /* ID Acceptance Mode : 0*/<br>    /* Maximum Number of Message Buffers : 15*/<br><br>/* ----------------------------------------------------------- */<br>/*    CAN_1.CR Control register                                */<br>/* ----------------------------------------------------------- */<br>    CAN_1.CR.R  = 0x001B0006;<br>    /* Bus -Off Interrupt Mask: Disabled         */<br>    /* CAN bit Sampling Mode: 1 Sample           */<br>    /* CAN Error Interrupt Mask: Disabled        */<br>    /* CLOCK Source: Oscillator                  */<br>    /* Listen Only Mode: Disabled                */<br>    /* Loop Back Mode: Disabled                  */<br>    /* Bus off Recovery: Enabled                 */<br>    /* Lowest Buffer Transfer First: Disabled    */<br>    /* Phase Segment1: 4                         */<br>    /* Phase Segment2: 4                         */<br>    /* Prescalar Division Factor: 1              */<br>    /* Propagation Segment: 7                    */<br>    /* Resynchronization Jump Width: 1           */<br>    /* Timer Synch Mode: Disabled                */<br><br><br><br>    /* Set the FlexCAN Maximum Buffer Number */<br>    CAN_1.MCR.B.MAXMB  = 15;<br><br><br>    /* clear memory from message buffer 0 to 15 */<br>    for(x=0; x < 16; x++)<br>    {<br>        CAN_1.BUF[x].CS.R = 0;<br>        CAN_1.BUF[x].ID.R = 0;<br>        for(i=0; i < 2; i++) <br>        {<br>            CAN_1.BUF[x].DATA.W[i] = 0;<br>        }<br>    }<br><br>/* ----------------------------------------------------------- */<br>/*    CAN_1.RXGMASK global mask                                */<br>/* ----------------------------------------------------------- */<br>    CAN_1.RXGMASK.R  = 0xFFFFFFFF;<br><br>/* ----------------------------------------------------------- */<br>/*    CAN_1.RX14MASK buffer 14 mask                             */<br>/* ----------------------------------------------------------- */<br>    CAN_1.RX14MASK.R  = 0xFFFFFFFF;<br><br>/* ----------------------------------------------------------- */<br>/*    CAN_1.RX15MASK  buffer 15 mask                            */<br>/* ----------------------------------------------------------- */<br>    CAN_1.RX15MASK.R  = 0xFFFFFFFF;<br><br><br>/* ----------------------------------------------------------- */<br>/*    CAN_1.IMRH Interrupt masks high register                  */<br>/* ----------------------------------------------------------- */<br>    CAN_1.IMRH.R  = 0x00000000;<br><br>/* ----------------------------------------------------------- */<br>/*    CAN_1.IMRL Interrupt masks low register                  */<br>/* ----------------------------------------------------------- */<br>    CAN_1.IMRL.R  = 0x00000000;<br><br>    /* Negate the HALT and the FREEZE bit to let the FlexCAN synchronize. */<br>    /* Exit and Disable freeze mode */<br>    CAN_1.MCR.B.HALT  =  1;<br>    CAN_1.MCR.B.FRZ   =  1;<br>    <br><br>    /* await synchronization (delay) */<br>    for(j=1; j < 255; j++){}<br><br>    if(CAN_1.MCR.B.NOTRDY == 1)<br>    {<br>       status = 1;<br>    }<br>    else<br>    {<br>       status = 0;<br>    }<br><br><br>    return status;<br><br>}<br>/*********************  CAN_2 Initialization Function(s) ************************/<br><br>uint8_t flexcan_2_init_fnc(void)<br>{<br><br>    uint16_t i, x;<br>    uint8_t status;<br>    volatile uint16_t j;<br><br>    /*Enable the CAN module */<br>    CAN_2.MCR.B.MDIS    = 0;<br><br>    /* Reset FlexCAN Module */<br>    CAN_2.MCR.B.SOFTRST = 1;<br>    while( CAN_2.MCR.B.SOFTRST ==1){}<br><br>    /*Disable the CAN module */<br>    CAN_2.MCR.B.MDIS    = 1;<br><br>    /* Set CAN clock source 1: bus , 0: oscillator */<br>    CAN_2.CR.B.CLKSRC   = 0;<br><br>    /*Enable the CAN module */<br>    CAN_2.MCR.B.MDIS    = 1;<br><br>    /* Set FRZ bit */<br>    CAN_2.MCR.B.FRZ   = 1;<br>    /* Set HALT bit */<br>    CAN_2.MCR.B.HALT  = 1;<br><br>/* ----------------------------------------------------------- */<br>/*                   CAN_2.MCR Control Register                          */<br>/* ----------------------------------------------------------- */<br>    CAN_2.MCR.R = 0xD080000F;<br>    /* Disable the FlexCAN module: 1*/<br>    /* Freeze Enable :1*/<br>    /* FIFO Enable :0*/<br>    /* Halt : 1*/<br>    /* Self Reception : 0*/<br>    /* Supervisor Mode : 0*/<br>    /* Warning Interrupt Enable : 0*/<br>    /* Backwards Compatibility Configuration : 0*/<br>    /* Local Priority Enable : 0*/<br>    /* Abort Enable : 0*/<br>    /* ID Acceptance Mode : 0*/<br>    /* Maximum Number of Message Buffers : 15*/<br><br>/* ----------------------------------------------------------- */<br>/*    CAN_2.CR Control register                                */<br>/* ----------------------------------------------------------- */<br>    CAN_2.CR.R  = 0x041B0006;<br>    /* Bus -Off Interrupt Mask: Disabled         */<br>    /* CAN bit Sampling Mode: 1 Sample           */<br>    /* CAN Error Interrupt Mask: Disabled        */<br>    /* CLOCK Source: Oscillator                  */<br>    /* Listen Only Mode: Disabled                */<br>    /* Loop Back Mode: Disabled                  */<br>    /* Bus off Recovery: Enabled                 */<br>    /* Lowest Buffer Transfer First: Disabled    */<br>    /* Phase Segment1: 4                         */<br>    /* Phase Segment2: 4                         */<br>    /* Prescalar Division Factor: 5              */<br>    /* Propagation Segment: 7                    */<br>    /* Resynchronization Jump Width: 1           */<br>    /* Timer Synch Mode: Disabled                */<br><br><br><br>    /* Set the FlexCAN Maximum Buffer Number */<br>    CAN_2.MCR.B.MAXMB  = 15;<br><br><br>    /* clear memory from message buffer 0 to 15 */<br>    for(x=0; x < 16; x++)<br>    {<br>        CAN_2.BUF[x].CS.R = 0;<br>        CAN_2.BUF[x].ID.R = 0;<br>        for(i=0; i < 2; i++) <br>        {<br>            CAN_2.BUF[x].DATA.W[i] = 0;<br>        }<br>    }<br><br>/* ----------------------------------------------------------- */<br>/*    CAN_2.RXGMASK global mask                                */<br>/* ----------------------------------------------------------- */<br>    CAN_2.RXGMASK.R  = 0xFFFFFFFF;<br><br>/* ----------------------------------------------------------- */<br>/*    CAN_2.RX14MASK buffer 14 mask                             */<br>/* ----------------------------------------------------------- */<br>    CAN_2.RX14MASK.R  = 0xFFFFFFFF;<br><br>/* ----------------------------------------------------------- */<br>/*    CAN_2.RX15MASK  buffer 15 mask                            */<br>/* ----------------------------------------------------------- */<br>    CAN_2.RX15MASK.R  = 0xFFFFFFFF;<br><br><br>/* ----------------------------------------------------------- */<br>/*    CAN_2.IMRH Interrupt masks high register                  */<br>/* ----------------------------------------------------------- */<br>    CAN_2.IMRH.R  = 0x00000000;<br><br>/* ----------------------------------------------------------- */<br>/*    CAN_2.IMRL Interrupt masks low register                  */<br>/* ----------------------------------------------------------- */<br>    CAN_2.IMRL.R  = 0x00000000;<br><br>    /* Negate the HALT and the FREEZE bit to let the FlexCAN synchronize. */<br>    /* Exit and Disable freeze mode */<br>    CAN_2.MCR.B.HALT  =  1;<br>    CAN_2.MCR.B.FRZ   =  1;<br>    <br><br>    /* await synchronization (delay) */<br>    for(j=1; j < 255; j++){}<br><br>    if(CAN_2.MCR.B.NOTRDY == 1)<br>    {<br>       status = 1;<br>    }<br>    else<br>    {<br>       status = 0;<br>    }<br><br><br>    return status;<br><br>}<br><br> <br>/*<br> *######################################################################<br> *                           End of File<br> *######################################################################<br>*/<br><br></pre></BODY></HTML>
